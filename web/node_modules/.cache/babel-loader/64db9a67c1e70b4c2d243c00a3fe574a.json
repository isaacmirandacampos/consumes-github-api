{"ast":null,"code":"var _jsxFileName = \"/home/isaac/www/consumesGithubApi/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport Container from '../../components/container';\nimport { Form, SubmitButton, List } from './styles';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newRepo: '',\n      repositories: [],\n      loading: false\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        newRepo: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      try {\n        e.preventDefault();\n        this.setState({\n          loading: true\n        });\n        const _this$state = this.state,\n              newRepo = _this$state.newRepo,\n              repositories = _this$state.repositories;\n        const response = await api.get(\"/repos/\".concat(newRepo));\n        const data = {\n          name: response.data.full_name\n        };\n\n        if (await repositories.find(newRepo)) {\n          throw new Error();\n        }\n\n        this.setState({\n          repositories: [...repositories, data],\n          newRepo: '',\n          loading: false\n        });\n      } catch (err) {\n        const input = document.querySelector('#input-repository').color = 'red';\n        this.setState({\n          newRepo: '',\n          loading: false\n        });\n        return new Error(err);\n      }\n    };\n  }\n\n  // carregar os dados do localStorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({\n        repositories: JSON.parse(repositories)\n      });\n    }\n  } // Salvar os dados do localstorage\n\n\n  componentDidUpdate(_, prevState) {\n    const repositories = this.state.repositories;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          newRepo = _this$state2.newRepo,\n          repositories = _this$state2.repositories,\n          loading = _this$state2.loading;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(FaGithubAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), \"Reposit\\xF3rio\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"input-repository\",\n      type: \"text\",\n      placeholder: \"Adicionar reposit\\xF3rio\",\n      value: newRepo,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(SubmitButton, {\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, loading ? React.createElement(FaSpinner, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }) : React.createElement(FaPlus, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, repositories.map(repository => React.createElement(\"li\", {\n      key: repository.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, repository.name), React.createElement(Link, {\n      to: \"/repository/\".concat(encodeURIComponent(repository.name)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Detalhes\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/isaac/www/consumesGithubApi/src/pages/Main/index.js"],"names":["React","Component","FaGithubAlt","FaPlus","FaSpinner","Link","api","Container","Form","SubmitButton","List","Main","state","newRepo","repositories","loading","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","response","get","data","name","full_name","find","Error","err","input","document","querySelector","color","componentDidMount","localStorage","getItem","JSON","parse","componentDidUpdate","_","prevState","setItem","stringify","render","map","repository","encodeURIComponent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport Container from '../../components/container';\nimport { Form, SubmitButton, List } from './styles';\n\nexport default class Main extends Component {\n  state = {\n    newRepo: '',\n    repositories: [],\n    loading: false,\n  };\n\n  // carregar os dados do localStorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n    if (repositories) {\n      this.setState({ repositories: JSON.parse(repositories) });\n    }\n  }\n\n  // Salvar os dados do localstorage\n  componentDidUpdate(_, prevState) {\n    const { repositories } = this.state;\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({ newRepo: e.target.value });\n  };\n\n  handleSubmit = async e => {\n    try {\n      e.preventDefault();\n\n      this.setState({ loading: true });\n\n      const { newRepo, repositories } = this.state;\n\n      const response = await api.get(`/repos/${newRepo}`);\n\n      const data = {\n        name: response.data.full_name,\n      };\n\n      if (await repositories.find(newRepo)) {\n        throw new Error();\n      }\n\n      this.setState({\n        repositories: [...repositories, data],\n        newRepo: '',\n        loading: false,\n      });\n    } catch (err) {\n      const input = (document.querySelector('#input-repository').color = 'red');\n\n      this.setState({ newRepo: '', loading: false });\n      return new Error(err);\n    }\n  };\n\n  render() {\n    const { newRepo, repositories, loading } = this.state;\n    return (\n      <Container>\n        <h1>\n          <FaGithubAlt />\n          Repositório\n        </h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <input\n            id=\"input-repository\"\n            type=\"text\"\n            placeholder=\"Adicionar repositório\"\n            value={newRepo}\n            onChange={this.handleInputChange}\n          />\n          <SubmitButton loading={loading}>\n            {loading ? (\n              <FaSpinner color=\"#FFF\" size={14} />\n            ) : (\n              <FaPlus color=\"#FFF\" size={14} />\n            )}\n          </SubmitButton>\n        </Form>\n        <List>\n          {repositories.map(repository => (\n            <li key={repository.name}>\n              <span>{repository.name}</span>\n              <Link to={`/repository/${encodeURIComponent(repository.name)}`}>\n                Detalhes\n              </Link>\n            </li>\n          ))}\n        </List>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}