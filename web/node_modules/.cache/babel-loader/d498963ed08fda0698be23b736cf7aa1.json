{"ast":null,"code":"import _slicedToArray from \"/home/isaac/www/consumesGithubApi/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/isaac/www/consumesGithubApi/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\nimport Container from '../../components/container';\nimport { Loading, Owner, IssuesList, ListBox } from './styles';\nexport default class Repository extends Component {\n  constructor(...args) {\n    super(...args);\n    this.PropTypes = {\n      match: PropTypes.shape({\n        params: PropTypes.shape({\n          repository: PropTypes.string\n        })\n      }).isRequired\n    };\n    this.state = {\n      repository: {},\n      issuesOpen: [],\n      loading: true,\n      issuesStates: []\n    };\n\n    this.handleInput = e => {\n      const issuesStates = this.state.issuesStates;\n      this.setState({\n        issuesStates: [e.target.id]\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const match = this.props.match;\n    const issuesState = this.state.issuesState;\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const _ref = await Promise.all([api.get(\"/repos/\".concat(repoName)), api.get(\"/repos/\".concat(repoName, \"/issues\"), {\n      params: {\n        state: 'all',\n        per_page: 5\n      }\n    }), api.get(\"/repos/\".concat(repoName, \"/issues\"), {\n      params: {\n        state: 'open',\n        per_page: 5\n      }\n    }), api.get(\"/repos/\".concat(repoName, \"/issues\"), {\n      params: {\n        state: 'closed',\n        per_page: 5\n      }\n    })]),\n          _ref2 = _slicedToArray(_ref, 4),\n          repository = _ref2[0],\n          issuesAll = _ref2[1],\n          issuesOpen = _ref2[2],\n          issuesClosed = _ref2[3];\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          repository = _this$state.repository,\n          issuesOpen = _this$state.issuesOpen,\n          loading = _this$state.loading,\n          issuesStates = _this$state.issuesStates;\n    const arrayIssues = ['open', 'closed'];\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Carregando\");\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Owner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Voltar aos reposit\\xF3rios\"), React.createElement(\"img\", {\n      src: repository.owner.avatar_url,\n      alt: repository.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, repository.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, repository.description)), React.createElement(ListBox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Listar reposit\\xF3rios:\"), arrayIssues.map(arrayIssue => React.createElement(\"label\", {\n      htmlFor: arrayIssue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleInput,\n      type: \"checkbox\",\n      id: arrayIssue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      key: arrayIssue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, arrayIssue)))), React.createElement(IssuesList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, issues.map(issue => React.createElement(\"li\", {\n      key: String(issue.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: issue.user.avatar_url,\n      alt: issue.user.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: issue.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, issue.title), issue.labels.map(label => React.createElement(\"span\", {\n      key: String(label.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, label.name))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, issue.user.login))))));\n  }\n\n}","map":{"version":3,"sources":["/home/isaac/www/consumesGithubApi/src/pages/Repository/index.js"],"names":["React","Component","Link","PropTypes","api","Container","Loading","Owner","IssuesList","ListBox","Repository","match","shape","params","repository","string","isRequired","state","issuesOpen","loading","issuesStates","handleInput","e","setState","target","id","componentDidMount","props","issuesState","repoName","decodeURIComponent","Promise","all","get","per_page","issuesAll","issuesClosed","data","issues","render","arrayIssues","owner","avatar_url","login","name","description","map","arrayIssue","issue","String","user","html_url","title","labels","label"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport api from '../../services/api';\n\nimport Container from '../../components/container';\nimport { Loading, Owner, IssuesList, ListBox } from './styles';\n\nexport default class Repository extends Component {\n  PropTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        repository: PropTypes.string,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    repository: {},\n    issuesOpen: [],\n    loading: true,\n    issuesStates: [],\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { issuesState } = this.state;\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const [repository, issuesAll, issuesOpen, issuesClosed] = await Promise.all(\n      [\n        api.get(`/repos/${repoName}`),\n\n        api.get(`/repos/${repoName}/issues`, {\n          params: {\n            state: 'all',\n            per_page: 5,\n          },\n        }),\n\n        api.get(`/repos/${repoName}/issues`, {\n          params: {\n            state: 'open',\n            per_page: 5,\n          },\n        }),\n\n        api.get(`/repos/${repoName}/issues`, {\n          params: {\n            state: 'closed',\n            per_page: 5,\n          },\n        }),\n      ]\n    );\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false,\n    });\n  }\n\n  handleInput = e => {\n    const { issuesStates } = this.state;\n    this.setState({ issuesStates: [e.target.id] });\n  };\n\n  render() {\n    const { repository, issuesOpen, loading, issuesStates } = this.state;\n    const arrayIssues = ['open', 'closed'];\n\n    if (loading) {\n      return <Loading>Carregando</Loading>;\n    }\n\n    return (\n      <Container>\n        <Owner>\n          <Link to=\"/\">Voltar aos repositórios</Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n        </Owner>\n        <ListBox>\n          <h2>Listar repositórios:</h2>\n          {arrayIssues.map(arrayIssue => (\n            <label htmlFor={arrayIssue}>\n              <input\n                onChange={this.handleInput}\n                type=\"checkbox\"\n                id={arrayIssue}\n              />\n              <p key={arrayIssue}>{arrayIssue}</p>\n            </label>\n          ))}\n        </ListBox>\n        <IssuesList>\n          {issues.map(issue => (\n            <li key={String(issue.id)}>\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\n              <div>\n                <strong>\n                  <a href={issue.html_url}>{issue.title}</a>\n                  {issue.labels.map(label => (\n                    <span key={String(label.id)}>{label.name}</span>\n                  ))}\n                </strong>\n                <p>{issue.user.login}</p>\n              </div>\n            </li>\n          ))}\n        </IssuesList>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}